name: Frontend Docker Build and Publish

on:
    push:
        branches: [main, master, workflow-dev]
        paths:
            - "frontend/**"
        tags: ["v*.*.*"]
    workflow_dispatch:

permissions:
    contents: read
    packages: write

jobs:
    build-and-push-frontend:
        name: Build and Push Frontend Image
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ollama-hack-frontend

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
                      ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,format=long
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: ./frontend
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
